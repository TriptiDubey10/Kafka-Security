[2022-09-05 17:05:22,538] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2022-09-05 17:19:37,766] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2022-09-05 17:22:33,692] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2022-09-05 17:28:52,032] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2022-09-05 17:39:42,569] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 17:39:42,656] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-09-05 17:39:42,659] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-09-05 17:39:42,693] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-09-05 17:39:42,734] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-09-05 17:39:42,742] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-09-05 17:39:42,800] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 122) (kafka.controller.KafkaController)
[2022-09-05 17:39:42,825] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-09-05 17:39:42,858] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-09-05 17:39:42,914] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-09-05 17:39:42,915] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-09-05 17:39:42,915] INFO [Controller id=0] Current list of topics in the cluster: Set(first-topic) (kafka.controller.KafkaController)
[2022-09-05 17:39:42,916] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-09-05 17:39:42,932] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-09-05 17:39:42,950] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-09-05 17:39:42,952] INFO [Controller id=0] List of topics ineligible for deletion: first-topic (kafka.controller.KafkaController)
[2022-09-05 17:39:42,952] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-09-05 17:39:42,953] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(first-topic) (kafka.controller.TopicDeletionManager)
[2022-09-05 17:39:42,954] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-09-05 17:39:43,000] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:39:43,018] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:39:43,019] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 17:39:43,114] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:39:43,271] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=first-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=first-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=first-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=first-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=first-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=first-topic,Partition=1,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:39:43,274] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 17:39:43,280] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 17:39:43,335] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(first-topic-1 -> OnlinePartition, first-topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 17:39:43,343] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-09-05 17:39:43,365] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-09-05 17:39:43,366] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-09-05 17:39:43,367] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-09-05 17:39:43,368] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-09-05 17:39:43,370] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-09-05 17:39:43,410] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-09-05 17:39:48,419] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 17:39:48,420] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 17:39:48,425] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 17:39:48,427] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 17:39:48,429] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 17:39:48,429] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 17:39:48,430] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 17:41:32,545] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-09-05 17:41:32,547] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 17:41:32,549] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-09-05 17:41:32,605] TRACE [Controller id=0] All leaders = first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-09-05 17:41:37,658] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-09-05 17:41:37,658] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 17:41:37,658] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-09-05 17:41:37,695] TRACE [Controller id=0] All leaders = first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-09-05 17:41:42,761] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-09-05 17:41:42,762] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 17:41:42,763] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-09-05 17:41:42,794] TRACE [Controller id=0] All leaders = first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-09-05 17:41:49,611] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 17:41:49,616] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 17:41:49,616] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 17:41:49,616] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-09-05 17:41:49,620] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-09-05 17:41:49,620] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 17:41:49,625] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:41:49,625] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-09-05 17:41:49,630] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-05 17:41:49,630] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-09-05 17:41:49,645] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-09-05 17:56:14,384] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 17:56:14,647] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-09-05 17:56:14,648] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-09-05 17:56:14,706] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-09-05 17:56:14,730] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-09-05 17:56:14,737] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-09-05 17:56:14,785] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 146) (kafka.controller.KafkaController)
[2022-09-05 17:56:14,815] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-09-05 17:56:14,846] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-09-05 17:56:14,909] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-09-05 17:56:14,910] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-09-05 17:56:14,910] INFO [Controller id=0] Current list of topics in the cluster: Set(first-topic) (kafka.controller.KafkaController)
[2022-09-05 17:56:14,911] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-09-05 17:56:14,938] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-09-05 17:56:14,949] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-09-05 17:56:14,950] INFO [Controller id=0] List of topics ineligible for deletion: first-topic (kafka.controller.KafkaController)
[2022-09-05 17:56:14,950] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-09-05 17:56:14,952] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(first-topic) (kafka.controller.TopicDeletionManager)
[2022-09-05 17:56:14,953] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-09-05 17:56:14,975] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:56:15,030] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 17:56:15,034] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:56:15,130] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:56:15,227] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=first-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=first-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=first-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=first-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=first-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=first-topic,Partition=1,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 17:56:15,228] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 17:56:15,233] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 17:56:15,239] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(first-topic-1 -> OnlinePartition, first-topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 17:56:15,240] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-09-05 17:56:15,278] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-09-05 17:56:15,279] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-09-05 17:56:15,280] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-09-05 17:56:15,281] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-09-05 17:56:15,283] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-09-05 17:56:15,312] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-09-05 17:56:20,315] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 17:56:20,315] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 17:56:20,322] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 17:56:20,325] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 17:56:20,327] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 17:56:20,327] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 17:56:20,327] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:01:20,334] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:01:20,342] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:01:20,344] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 18:01:20,345] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 18:01:20,345] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 18:01:20,346] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:01:20,346] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:06:20,363] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:06:20,364] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:06:20,365] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 18:06:20,365] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 18:06:20,365] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 18:06:20,366] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:06:20,366] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:07:55,260] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-09-05 18:07:55,262] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-09-05 18:07:55,276] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-09-05 18:07:55,292] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-09-05 18:07:55,322] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 18:07:55,328] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 18:07:55,353] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2022-09-05 18:07:55,356] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 146, 1 -> 164) (kafka.controller.KafkaController)
[2022-09-05 18:07:55,471] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:07:55,562] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-09-05 18:07:58,950] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1) for TopicPartitions: ArrayBuffer(first-topic-1, first-topic-0) (kafka.controller.KafkaController)
[2022-09-05 18:11:20,374] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:11:20,374] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:11:20,375] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 18:11:20,375] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 18:11:20,375] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 18:11:20,375] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:11:20,375] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:13:56,341] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-09-05 18:13:56,341] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-09-05 18:13:56,350] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-09-05 18:13:56,361] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2022-09-05 18:13:56,366] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 146, 1 -> 164, 2 -> 184) (kafka.controller.KafkaController)
[2022-09-05 18:13:56,376] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-09-05 18:13:56,378] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 18:13:56,482] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:13:56,516] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-09-05 18:13:58,899] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(first-topic-1, first-topic-0) (kafka.controller.KafkaController)
[2022-09-05 18:16:20,380] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:16:20,380] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:16:20,381] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 18:16:20,381] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 18:16:20,382] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions first-topic-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 18:16:20,405] INFO [Controller id=0] Partition first-topic-0 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2022-09-05 18:16:20,405] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:16:20,405] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:19:53,502] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-09-05 18:19:53,502] DEBUG [Controller id=0] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-09-05 18:19:53,503] DEBUG [Controller id=0] Live brokers: 0,1 (kafka.controller.KafkaController)
[2022-09-05 18:19:53,525] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=first-topic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2022-09-05 18:19:53,551] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=first-topic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2022-09-05 18:19:53,552] TRACE [Controller id=0] All leaders = first-topic-1 -> (Leader:0,ISR:0,1,LeaderEpoch:3,ControllerEpoch:3),first-topic-0 -> (Leader:0,ISR:0,1,LeaderEpoch:5,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-09-05 18:19:53,592] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=3, deletePartitions=false, brokerEpoch=184, partitions=first-topic-1) to broker localhost:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-05 18:19:54,970] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:19:54,971] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:19:54,971] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:19:54,972] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-09-05 18:19:54,973] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-09-05 18:19:54,977] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 18:19:54,978] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 18:19:54,979] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-09-05 18:19:55,011] INFO [Controller id=0] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-09-05 18:19:55,012] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-09-05 18:19:55,014] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2022-09-05 18:19:55,014] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=3, deletePartitions=false, brokerEpoch=184, partitions=first-topic-1) to broker localhost:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-05 18:19:55,015] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-09-05 18:19:55,015] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-09-05 18:19:55,016] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-05 18:19:55,021] INFO [Controller id=0] Broker failure callback for 2 (kafka.controller.KafkaController)
[2022-09-05 18:19:55,023] INFO [Controller id=0] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-09-05 18:19:55,032] DEBUG [Controller id=0] Unregister BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2022-09-05 18:19:55,033] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 146, 1 -> 164) (kafka.controller.KafkaController)
[2022-09-05 18:33:50,926] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2022-09-05 18:35:32,031] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:35:32,108] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2022-09-05 18:35:32,111] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-09-05 18:35:32,129] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-09-05 18:35:32,138] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-09-05 18:35:32,146] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-09-05 18:35:32,179] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 212) (kafka.controller.KafkaController)
[2022-09-05 18:35:32,210] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-09-05 18:35:32,239] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-09-05 18:35:32,257] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-09-05 18:35:32,257] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-09-05 18:35:32,257] INFO [Controller id=0] Current list of topics in the cluster: Set(first-topic) (kafka.controller.KafkaController)
[2022-09-05 18:35:32,258] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-09-05 18:35:32,267] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-09-05 18:35:32,274] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-09-05 18:35:32,276] INFO [Controller id=0] List of topics ineligible for deletion: first-topic (kafka.controller.KafkaController)
[2022-09-05 18:35:32,277] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-09-05 18:35:32,277] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(first-topic) (kafka.controller.TopicDeletionManager)
[2022-09-05 18:35:32,280] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-09-05 18:35:32,350] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 18:35:32,421] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 18:35:32,516] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 18:35:32,626] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=first-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=first-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=first-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=first-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=first-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=first-topic,Partition=1,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 18:35:32,627] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 18:35:32,631] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 18:35:32,638] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(first-topic-1 -> OnlinePartition, first-topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 18:35:32,639] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2022-09-05 18:35:32,651] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-09-05 18:35:32,651] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-09-05 18:35:32,652] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-09-05 18:35:32,653] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-09-05 18:35:32,659] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-09-05 18:35:32,673] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-09-05 18:35:32,691] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 18:35:37,691] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:35:37,692] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:35:37,694] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 18:35:37,696] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 18:35:37,697] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 18:35:37,697] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:35:37,697] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:40:37,702] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:40:37,702] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:40:37,702] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 18:40:37,702] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 18:40:37,702] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 18:40:37,702] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:40:37,702] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:42:49,857] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-09-05 18:42:49,858] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-09-05 18:42:49,869] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-09-05 18:42:49,885] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2022-09-05 18:42:49,888] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 212, 1 -> 262) (kafka.controller.KafkaController)
[2022-09-05 18:42:49,891] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-09-05 18:42:49,985] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:42:50,012] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-09-05 18:42:50,466] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 18:42:54,347] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1) for TopicPartitions: ArrayBuffer(first-topic-1, first-topic-0) (kafka.controller.KafkaController)
[2022-09-05 18:43:12,223] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-09-05 18:43:12,223] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-09-05 18:43:12,231] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-09-05 18:43:12,237] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2022-09-05 18:43:12,249] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 212, 1 -> 262, 2 -> 282) (kafka.controller.KafkaController)
[2022-09-05 18:43:12,252] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-09-05 18:43:12,331] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 18:43:12,372] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-09-05 18:43:12,809] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 18:43:19,335] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(first-topic-1, first-topic-0) (kafka.controller.KafkaController)
[2022-09-05 18:45:37,714] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:45:37,714] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:45:37,714] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(first-topic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2022-09-05 18:45:37,715] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-09-05 18:45:37,715] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions first-topic-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-09-05 18:45:37,744] INFO [Controller id=0] Partition first-topic-0 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2022-09-05 18:45:37,744] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:45:37,744] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:49:47,312] INFO [Controller id=0] New topics: [Set(ssl-topic)], deleted topics: [Set()], new partition replica assignment [Map(ssl-topic-1 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), ssl-topic-0 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2022-09-05 18:49:47,315] INFO [Controller id=0] New partition creation callback for ssl-topic-1,ssl-topic-0 (kafka.controller.KafkaController)
[2022-09-05 18:50:37,749] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:50:37,749] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:50:37,750] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 18:50:37,750] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:50:37,750] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 18:50:37,750] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:50:37,750] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:50:37,750] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 18:55:37,763] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:00:37,778] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:00:37,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:00:37,781] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:00:37,781] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:00:37,781] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:00:37,781] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:00:37,781] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:00:37,781] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:05:37,794] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:05:37,794] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:05:37,795] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:05:37,795] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:05:37,795] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:05:37,795] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:05:37,795] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:05:37,795] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:10:37,808] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:15:37,823] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:15:37,823] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:15:37,823] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:15:37,823] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:15:37,823] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:15:37,824] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:15:37,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:15:37,824] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:20:37,837] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:20:37,837] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:20:37,838] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:20:37,838] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:20:37,838] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:20:37,838] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:20:37,838] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:20:37,838] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:25:37,843] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:30:37,850] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:30:37,850] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:30:37,851] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:30:37,851] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:30:37,851] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:30:37,851] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:30:37,851] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:30:37,851] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:35:37,863] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:35:37,863] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:35:37,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:35:37,864] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:35:37,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:35:37,864] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:35:37,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:35:37,864] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:36:46,844] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2022-09-05 19:36:46,845] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-09-05 19:36:47,089] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 19:36:47,180] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 19:36:47,181] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-05 19:40:37,866] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-05 19:40:37,866] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-05 19:40:37,867] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-05 19:40:37,867] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:40:37,867] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-05 19:40:37,868] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:40:37,868] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-09-05 19:40:37,868] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-09-05 19:41:25,003] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-09-05 19:41:25,003] DEBUG [Controller id=0] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-09-05 19:41:25,004] DEBUG [Controller id=0] Live brokers: 0,1 (kafka.controller.KafkaController)
[2022-09-05 19:41:25,025] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ssl-topic,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=ssl-topic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=first-topic,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2022-09-05 19:41:25,053] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=ssl-topic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=first-topic,Partition=1,Replica=2],false),StopReplicaRequestInfo([Topic=ssl-topic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2022-09-05 19:41:25,054] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),ssl-topic-1 -> (Leader:1,ISR:1,0,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),first-topic-1 -> (Leader:0,ISR:0,1,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),ssl-topic-0 -> (Leader:0,ISR:0,1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),first-topic-0 -> (Leader:0,ISR:0,1,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-09-05 19:41:25,115] WARN [RequestSendThread controllerId=0] Controller 0 epoch 4 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=4, deletePartitions=false, brokerEpoch=282, partitions=ssl-topic-1,first-topic-1,ssl-topic-0) to broker localhost:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-05 19:41:26,384] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:41:26,387] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:41:26,387] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:41:26,389] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-09-05 19:41:26,390] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-09-05 19:41:26,392] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 19:41:26,393] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 19:41:26,393] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-09-05 19:41:26,409] INFO [Controller id=0] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-09-05 19:41:26,410] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-09-05 19:41:26,412] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2022-09-05 19:41:26,413] WARN [RequestSendThread controllerId=0] Controller 0 epoch 4 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=4, deletePartitions=false, brokerEpoch=282, partitions=ssl-topic-1,first-topic-1,ssl-topic-0) to broker localhost:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-05 19:41:26,413] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-09-05 19:41:26,413] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-09-05 19:41:26,413] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-05 19:41:26,418] INFO [Controller id=0] Broker failure callback for 2 (kafka.controller.KafkaController)
[2022-09-05 19:41:26,420] INFO [Controller id=0] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-09-05 19:41:26,488] DEBUG [Controller id=0] Unregister BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2022-09-05 19:41:26,489] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 212, 1 -> 262) (kafka.controller.KafkaController)
[2022-09-05 19:41:54,136] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-09-05 19:41:54,137] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-09-05 19:41:54,137] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 19:41:54,145] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=ssl-topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=first-topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=first-topic,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2022-09-05 19:41:54,167] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=first-topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=ssl-topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=first-topic,Partition=1,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2022-09-05 19:41:54,168] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),ssl-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),ssl-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-09-05 19:41:54,199] WARN [RequestSendThread controllerId=0] Controller 0 epoch 4 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=4, deletePartitions=false, brokerEpoch=262, partitions=first-topic-0,ssl-topic-0,first-topic-1) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-05 19:41:55,249] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:41:55,252] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:41:55,252] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:41:55,254] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-09-05 19:41:55,255] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-09-05 19:41:55,257] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 19:41:55,259] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 19:41:55,260] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-09-05 19:41:55,280] INFO [Controller id=0] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 19:41:55,281] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-09-05 19:41:55,282] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2022-09-05 19:41:55,283] WARN [RequestSendThread controllerId=0] Controller 0 epoch 4 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=4, deletePartitions=false, brokerEpoch=262, partitions=first-topic-0,ssl-topic-0,first-topic-1) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-05 19:41:55,283] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-09-05 19:41:55,283] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-09-05 19:41:55,283] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-05 19:41:55,286] INFO [Controller id=0] Broker failure callback for 1 (kafka.controller.KafkaController)
[2022-09-05 19:41:55,287] INFO [Controller id=0] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-09-05 19:41:55,367] DEBUG [Controller id=0] Unregister BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2022-09-05 19:41:55,367] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 212) (kafka.controller.KafkaController)
[2022-09-05 19:42:03,638] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-09-05 19:42:03,638] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 19:42:03,638] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-09-05 19:42:03,643] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-13 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),ssl-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),ssl-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-09-05 19:42:08,661] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-09-05 19:42:08,661] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 19:42:08,661] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-09-05 19:42:08,664] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-13 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),ssl-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),ssl-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-09-05 19:42:13,679] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-09-05 19:42:13,679] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-09-05 19:42:13,679] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-09-05 19:42:13,683] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-13 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),ssl-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),ssl-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-09-05 19:42:20,056] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:42:20,057] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:42:20,057] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-05 19:42:20,058] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-09-05 19:42:20,058] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-09-05 19:42:20,060] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-09-05 19:42:20,061] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-09-05 19:42:20,062] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-09-05 19:42:20,062] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-09-05 19:42:20,062] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-05 19:42:20,065] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
